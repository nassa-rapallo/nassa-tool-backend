version: "3"
services:
  api-gateway:
    build:
      context: "."
      dockerfile: "./api-gateway/Dockerfile"
    env_file:
      - .env
      - ./api-gateway/gateway.env
    depends_on:
      - rabbitmq
      - user
    ports:
      - "7000:7000"
    volumes:
      - ./api-gateway:/opt/app
    networks:
      - backend

  # USER SERVICE CONFIGURATION
  user:
    build:
      context: "."
      dockerfile: "./user/Dockerfile"
    depends_on:
      - rabbitmq
      - user-db
    links:
      - rabbitmq
    env_file:
      - .env
      - ./user/user.env
    ports:
      - "7100:7100"
    volumes:
      - ./user:/opt/app
    networks:
      - backend
  # POSTGRES DB
  user-db:
    container_name: user-postgres
    volumes:
      - /data/user-postgres:/data/postgres
    env_file:
      - ./user/user.env
    image: postgres:alpine
    ports:
      - "7200:5432"
    networks:
      - backend
      - user-postgres

  # TOKEN SERVICE CONFIGURATION
  token:
    build:
      context: "."
      dockerfile: "./token/Dockerfile"
    depends_on:
      - rabbitmq
      - token-db
    links:
      - rabbitmq
    env_file:
      - .env
      - ./token/user-token.env
    ports:
      - "7101:7101"
    volumes:
      - ./token:/opt/app
    networks:
      - backend
  # POSTGRES DB
  token-db:
    container_name: token-postgres
    volumes:
      - /data/token-postgres:/data/postgres
    env_file:
      - ./token/user-token.env
    image: postgres:alpine
    ports:
      - "7201:5432"
    networks:
      - token-postgres
      - backend

# PERMISSION SERVICE CONFIGURATION
  permission:
    build:
      context: "."
      dockerfile: "./permission/Dockerfile"
    depends_on:
      - rabbitmq
      - permission-db
    links:
      - rabbitmq
    env_file:
      - .env
      - ./permission/permission.env
    ports:
      - "7102:7102"
    volumes:
      - ./permission:/opt/app
    networks:
      - backend
  # POSTGRES DB
  permission-db:
    container_name: permission-postgres
    volumes:
      - /data/permission-postgres:/data/postgres
    env_file:
      - ./permission/permission.env
    image: postgres:alpine
    ports:
      - "7202:5432"
    networks:
      - permission-postgres
      - backend

# MAILER SERVICE CONFIGURATION
  mailer:
    build:
      context: "."
      dockerfile: "./mailer/Dockerfile"
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    env_file:
      - .env
    ports:
      - "7103:7103"
    volumes:
      - ./mailer:/opt/app
    networks:
      - backend

#RABBITMQ CONFIGURATION
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    networks:
      - backend

  # NETWORKS
networks:
  backend:
  user-postgres:
    driver: bridge
  token-postgres:
    driver: bridge
  permission-postgres:
    driver: bridge
